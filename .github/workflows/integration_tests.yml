name: Integration Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  compile-contracts:
    name: Compile contracts using optimized rust compiler
    runs-on: ubuntu-latest
    container:
      image: cosmwasm/workspace-optimizer:0.12.6
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install tar for cache upload
        run: apk add --no-cache tar
      - name: Rust Dependencies Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Optimize
        run: optimize_workspace.sh
      - name: Upload contracts
        uses: actions/upload-artifact@v3
        with:
          name: dao-dao-contract-artifacts-${{ github.event.number }}
          path: artifacts
          retention-days: 1

  test:
    name: Run integration tests against local juno node
    runs-on: ubuntu-latest
    needs: compile-contracts
    env:
      ADMIN_ADDR: juno10j9gpw9t4jsz47qgnkvl5n3zlm2fz72k67rxsg
      KEY_NAME: localval
      GAS_REPORT_OUT: ./gas_report.json
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      # TODO: This is dumb, but:
      # * We cant run this juno node as a `service` because services
      #   cant have custom entrypoint overrides
      # * We cant run this juno node as a container of the job, because juno image
      #   uses alpine which I couldnt get to compile `cw-core-macros`
      #   (but rust optimizer uses alpine so I can look to see how they get that working later)
      - name: Run Local Juno Node
        run: |
          docker run --rm -d --name juno \
            -e PASSWORD=xxxxxxxxx \
            -e STAKE_TOKEN=ujunox \
            -e GAS_LIMIT=100000000 \
            -e UNSAFE_CORS=true \
            -p 1317:1317 \
            -p 26656:26656 \
            -p 26657:26657 \
            ghcr.io/cosmoscontracts/juno:v8.0.0 /opt/setup_and_run.sh $ADMIN_ADDR

      # TODO: We should be polling until a certain height is reached instead of sleeping
      # (it would be cool if cosm-orc could do this for us)
      - name: Let Juno catch up
        run: sleep 30

      - name: Restore optimized contracts
        uses: actions/download-artifact@v3
        with:
          name: dao-dao-contract-artifacts-${{ github.event.number }}
          path: ci/integration_tests/artifacts

      - name: Download smart contract dependencies
        run: |
          wget https://github.com/CosmWasm/cw-plus/releases/download/v0.11.1/cw20_base.wasm \
            -O ci/integration_tests/artifacts/cw20_base.wasm
          wget https://github.com/CosmWasm/cw-plus/releases/download/v0.11.1/cw4_group.wasm \
            -O ci/integration_tests/artifacts/cw4_group.wasm

      - name: Install local junod
        run: |
          wget https://github.com/CosmosContracts/juno/releases/download/v8.0.0/junod -O junod
          chmod +x ./junod
          mv junod /usr/local/bin
      
      - name: Add Validator key
        run: |
          junod config keyring-backend test
          tail -n 1 default-account.txt | junod keys add $KEY_NAME --recover

      - name: Run Integration Tests
        run: cd ci/integration_tests/ && RUST_LOG=DEBUG CONTRACT_DIR="artifacts" cargo test

      - name: Raw Gas Report
        run: cat ci/integration_tests/gas_report.json

      # TODO: 
      # + Upload gas_report output as github artifact
      # * Download main's gas_report artifact and diff
